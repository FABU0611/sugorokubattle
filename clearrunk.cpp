//clearrunk.cpp		クリアランク表示処理
//20106_田中蓮
//23_09_21
#include "clearrunk.h"
#include "player.h"
#include "sprite.h"
#include "texture.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
static const float TEX_WIDTH	= 235.0f;	//テクスチャの横幅
static const float TEX_HEIGHT	= 250.0f;	//テクスチャの縦幅

struct SCORE {
	int coin;
	int killed;
	int life;

	int score;
};
//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static int g_TexNo;		//テクスチャ番号
static float g_U;		//U値の横幅
static float g_V;		//V値の高さ

SCORE g_Score;
//=============================================================================
// 初期化処理
//=============================================================================
void InitClearrunk(void)
{
	//テクスチャの読み込み
	g_TexNo = LoadTexture((char*)"data/TEXTURE/clearrunk.png");

	g_U = 0.0f;
	g_V = 0.0f;

	//ゲーム終了時のプレイヤー情報をもらう
	g_Score.coin = GetPlayerCoinNum();
	g_Score.killed = GetPlayerkilledNum();
	g_Score.life = GetPlayerLife();

	g_Score.score = 0;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitClearrunk(void)
{
}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateClearrunk(void)
{
	//情報からスコア計算
	g_Score.score = (g_Score.coin) + (g_Score.killed * 0.5f) + (g_Score.life);

	//スコアから表示するランクを設定
	//S
	if (g_Score.score > 20) {
		g_U = (1.0f / 3) * 0;
	}
	//A
	else if (g_Score.score > 10) {
		g_U = (1.0f / 3) * 1;
	}
	//B
	else {
		g_U = (1.0f / 3) * 2;
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawClearrunk(void)
{
	//線をなくす
	SetSamplerState(FILTER_MODE_POINT, ADDRESS_MODE_WRAP);
	//背景の描画
	DrawSprite(g_TexNo,
		1300.0f, 825.0f,
		TEX_WIDTH, TEX_HEIGHT,
		g_U, g_V,
		(1.0f / 3), 1.0f);
}